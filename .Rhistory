runApp('R/Training/Successful_MC')
runApp('R/Training/Successful_MC/STOIIP')
runApp('R/Training/Successful_MC/STOIIP')
require(devtools)
install_github('rCharts', 'ramnathv')
install.packages("devtools")
install_github('rCharts', 'ramnathv')
library(devtools)
install_github('rChart', 'ramnathv')
install_github('rChart', 'ramnathv/rChart')
dTable <- dataTable <- function(x, ...){
myTable <- Datatables$new()
myTable$addTable( x, ... )
return(myTable$copy())
}
Datatables = setRefClass('Datatables', contains = 'rCharts', methods = list(
initialize = function(x){
callSuper()
container <<- 'table'
},
addTable = function(x, ...){
params$table <<- modifyList(make_table2(x), list(...))
},
getPayload = function(chartId){
list(chartParams = toJSON2(params), chartId = chartId, lib = basename(lib))
}
))
make_table <- function(df){
nms = names(df)
nms = setNames(nms, rep('sTitle', length(nms)))
l = apply(setNames(df, NULL), 1, as.list)
names(l) = NULL
list(aaData = l, aoColumns = nms)
}
make_table2 <- function(df_){
nms = names(df_)
nms = lapply(nms, function(nm){
list(sTitle = nm)
})
list(
aaData = toJSONArray2(df_, json = F, names = F),
aoColumns = as.list(nms)
)
}
dTable <- dataTable <- function(x, ...){
myTable <- Datatables$new()
myTable$addTable( x, ... )
return(myTable$copy())
}
library(rCharts)
install.packages("rCharts")
rmarkdown::render_site()
Pi <- 2000
Duration = c(0:10)
DR <- 0.2
#df <- data.frame(Duration,Pi)
df <- NULL
for (i in Duration) {
Pi = Pi- (Pi*DR)
# print(paste(round(Pi,0),i+1))
df <- rbind(df,data.frame(i, round(Pi,0)))
#df <- rbind(df,i, round(Pi,0))
}
#df
names(df)[1] <- "Time"
names(df)[2] <- "Production"
df
# ggplot(df, ylab= "Production(STB)", xlab = "Time in years")+geom_smooth(aes(x=df$i, y=df$Pi))
p<- ggplot(df, aes(Time,Production))+geom_point()+geom_line(colour = "blue")
plotly::ggplotly(p)
print(paste('the total production is' , sum(df$Production)*365))
Pi <- 1000
Duration = 10
DR <- 0.2
df <- NULL
for (i in 0:Duration) {
Pi = Pi- (Pi*DR)
print(paste(round(Pi,0),i+1))
df <- rbind(df,data.frame(i+1, round(Pi,digits = 0)))
}
df
plot(df, ylab= "Production(STB)", xlab = "Time in years")
library(ggplot2)
Pi <- 1000
Duration = 10
DR <- 0.2
df <- NULL
for (i in 0:Duration) {
Pi = Pi- (Pi*DR)
print(paste(round(Pi,0),i+1))
df <- rbind(df,data.frame(i+1, round(Pi,digits = 0)))
}
names(df)[1] <- "Time"
names(df)[2] <- "Production"
df
plot(df, ylab= "Production(STB)", xlab = "Time in years")
print(paste('the total production is' , sum(df$Production)*365))
prod.fun <- function(Pi,t,Dr) {
df <-NULL
for (i in 0:Duration) {
Pi = Pi- (Pi*DR)
print(paste(round(Pi,0),i+1))
df <- rbind(df,data.frame(i+1, round(Pi,digits = 0)))
}
names(df)[1] <- "Time"
names(df)[2] <- "Production"
return(df)
}
prod.fun(1000,10,0.2)
prod.fun <- function(Pi,t,Dr) {
df <-NULL
for (i in 0:Duration) {
Pi = Pi- (Pi*DR)
#print(paste(round(Pi,0),i+1))
df <- rbind(df,data.frame(i+1, round(Pi,digits = 0)))
}
names(df)[1] <- "Time"
names(df)[2] <- "Production"
return(df)
}
prod.fun(1000,10,0.2)
prod.fun <- function(Pi,t,Dr) {
df <- data.frame(t, Pi)
for (i in 0:Duration) {
Pi = Pi- (Pi*DR)
#print(paste(round(Pi,0),i+1))
df <- rbind(df,data.frame(i+1, round(Pi,digits = 0)))
}
names(df)[1] <- "Time"
names(df)[2] <- "Production"
return(df)
}
prod.fun(1000,10,0.2)
#####function--------------------------------------------------------
prod.fun <- function(Pi,t,Dr) {
df <- data.frame(t, Pi)
for (i in 0:Duration) {
Pi = Pi- (Pi*DR)
#print(paste(round(Pi,0),i+1))
df <- rbind(df,data.frame(i+1, round(Pi,digits = 0)))
}
# names(df)[1] <- "Time"
# names(df)[2] <- "Production"
return(df)
}
prod.fun(1000,10,0.2)
knit_with_parameters('~/GitHub/marktest.github.io/Fun.Rmd')
library(shiny)
library(ggplot2)
inputPanel(
numericInput("Duration", label = "Years to Predict",
value = 10, min = 1, step = 1),
numericInput("Pi", label = "Initial Rate",
value = 1000, min = 1, step = 1)
)
Pi <- 2000
Duration = c(0:10)
DR <- 0.2
#df <- data.frame(Duration,Pi)
df <- NULL
for (i in Duration) {
Pi = Pi- (Pi*DR)
# print(paste(round(Pi,0),i+1))
df <- rbind(df,data.frame(i, round(Pi,0)))
#df <- rbind(df,i, round(Pi,0))
}
#df
names(df)[1] <- "Time"
names(df)[2] <- "Production"
df
# ggplot(df, ylab= "Production(STB)", xlab = "Time in years")+geom_smooth(aes(x=df$i, y=df$Pi))
p<- ggplot(df, aes(Time,Production))+geom_point()+geom_line(colour = "blue")
plotly::ggplotly(p)
print(paste('the total production is' , sum(df$Production)*365))
runApp('R/Training/Prod.Man')
runApp('R/Training/Prod.Man')
prod.fun <- function(Pi,t,Dr) {
df <- NULL
for (i in 0:Duration) {
Pi = Pi- (Pi*DR)
#print(paste(round(Pi,0),i+1))
df <- rbind(df,data.frame(i+1, round(Pi,digits = 0)))
}
names(df)[1] <- "Time"
names(df)[2] <- "Production"
return(df)
}
prod.fun(1000,10,0.2)
#####function--------------------------------------------------------
prod.fun <- function(Pi,t,Dr) {
df <- NULL
for (i in 0:t) {
Pi = Pi- (Pi*DR)
#print(paste(round(Pi,0),i+1))
df <- rbind(df,data.frame(i+1, round(Pi,digits = 0)))
}
names(df)[1] <- "Time"
names(df)[2] <- "Production"
return(df)
}
prod.fun(1000,10,0.2)
#####function--------------------------------------------------------
prod.fun <- function(Pi,t,Dr) {
df <- NULL
for (i in 0:t) {
Pi = Pi- (Pi*Dr)
#print(paste(round(Pi,0),i+1))
df <- rbind(df,data.frame(i+1, round(Pi,digits = 0)))
}
names(df)[1] <- "Time"
names(df)[2] <- "Production"
return(df)
}
prod.fun(1000,10,0.2)
df
df
return(as.data.frame(df))
prod.fun
#####function--------------------------------------------------------
prod.fun <- function(Pi,t,Dr) {
df <- NULL
for (i in 0:t) {
Pi = Pi- (Pi*Dr)
#print(paste(round(Pi,0),i+1))
df <- rbind(df,data.frame(i+1, round(Pi,digits = 0)))
}
names(df)[1] <- "Time"
names(df)[2] <- "Production"
return(as.data.frame(df))
}
prod.fun(1000,10,0.2)
df
print(df)
prod.fun(1000,10,0.2)
#####function--------------------------------------------------------
prod.fun <- function(Pi,t,Dr) {
df <- NULL
for (i in 0:t) {
Pi = Pi- (Pi*Dr)
#print(paste(round(Pi,0),i+1))
df <- rbind(df,data.frame(i, round(Pi,digits = 0)))
}
names(df)[1] <- "Time"
names(df)[2] <- "Production"
return(as.data.frame(df))
}
prod.fun(1000,10,0.2)
runApp('R/Training/Prod.Man')
install.packages("kintr")
setwd("~/")
setwd("~/GitHub/marktest.github.io")
prod.fun <- function(Pi,t,Dr) {
df <- NULL
i <- c(0:t)
if (i < t ){
Pi = Pi- (Pi*Dr)
#print(paste(round(Pi,0),i+1))
df <- rbind(df,data.frame(i, round(Pi,digits = 0)))
} else {}
names(df)[1] <- "Time"
names(df)[2] <- "Production"
return(as.data.frame(df))
}
######------------------------------------
prod.fun(1000,10,0.2
)
library(ggplot2)
Pi <- 1000
Duration = 10
DR <- 0.2
df <- NULL
for (i in 0:Duration) {
Pi = Pi- (Pi*DR)
print(paste(round(Pi,0),i+1))
df <- rbind(df,data.frame(i+1, round(Pi,digits = 0)))
}
names(df)[1] <- "Time"
names(df)[2] <- "Production"
df
plot(df, ylab= "Production(STB)", xlab = "Time in years")
print(paste('the total production is' , sum(df$Production)*365))
runApp('~/R/Training/Prod.Man')
library(ggplot2)
Pi <- 1000
Duration = 10
DR <- 0.2
df <- NULL
for (i in 0:Duration) {
Pi = Pi- (Pi*DR)
print(paste(round(Pi,0),i+1))
df <- rbind(df,data.frame(i+1, round(Pi,digits = 0)))
}
names(df)[1] <- "Time"
names(df)[2] <- "Production"
df
plot(df, ylab= "Production(STB)", xlab = "Time in years")
print(paste('the total production is' , sum(df$Production)*365))
is.data.frame(df)
qplot(df, ylab= "Production(STB)", xlab = "Time in years")
library(ggplot2)
Pi <- 1000
Duration = 10
DR <- 0.2
df <- NULL
for (i in 0:Duration) {
Pi = Pi- (Pi*DR)
print(paste(round(Pi,0),i+1))
df <- rbind(df,data.frame(i+1, round(Pi,digits = 0)))
}
names(df)[1] <- "Time"
names(df)[2] <- "Production"
df
qplot(df, ylab= "Production(STB)", xlab = "Time in years")
print(paste('the total production is' , sum(df$Production)*365))
